<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[awk语法及常用命令总结]]></title>
    <url>%2F2018%2F12%2F11%2Fawk%E8%AF%AD%E6%B3%95%E5%8F%8A%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E6%80%BB%E7%BB%93%2F</url>
    <content type="text"><![CDATA[awk命令语法：awk [-F|-f|-v] ‘BEGIN{} //{command1; command2} END{}’ file [-F|-f|-v] 大参数，-F指定分隔符，-f调用脚本，-v定义变量 var=value‘ ‘ 引用代码块BEGIN 初始化代码块，在对每一行进行处理之前，初始化代码，主要是引用全局变量，设置FS分隔符// 匹配代码块，可以是字符串或正则表达式{} 命令代码块，包含一条或多条命令； 多条命令使用分号分隔END 结尾代码块，在对每一行进行处理之后再执行的代码块，主要是进行最终计算或输出结尾摘要信息]]></content>
  </entry>
  <entry>
    <title><![CDATA[使用awk完成同一文件不同列的比较]]></title>
    <url>%2F2018%2F12%2F11%2Fawk%2F</url>
    <content type="text"><![CDATA[适用场景：想要单独获取文件中某一列的值，或者需要对其中两列进行比较时。 使用方法： 1、获取某一列的值 假设有文件 employ.txt 其中 张三,男,23岁,3000 李四,男,24岁,4000 铁柱,女,25岁,5000 想要获取所有员工的姓名并把其保存到name.txt文件中，可以用awk实现，具体语法如下： 1$ cat employ.txt |awk -F "," 'print&#123;$1&#125;' | tr -s "\n" &gt; name.txt 该命令的含义是把”,”当做分隔符，输出文件第一列的值，并且把结果输出到name.txt文件中（注：此处用的是重定向，并非在name.txt文件结尾添加） 假设有文件grade.txt 其中 张三,89,80 李四,80,60 铁柱,99,99 想要找出有几行的第三列大于第二列并将其打印，具体语法如下： 1ls -l|awk -F "," 'BEGIN&#123;count = 0;&#125;&#123;if($2&lt;$3)&#123;count = count+1;&#125;&#125; END&#123;print "count:",count&#125;' garde.txt 该命令是建立一个变量count用来计数，以”,”为分隔符，当$2&lt;$3时count数量加一，最后输出count的值]]></content>
  </entry>
</search>
